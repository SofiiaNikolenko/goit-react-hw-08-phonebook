{"version":3,"file":"static/js/107.bb8191b3.chunk.js","mappings":"6OAAaA,EAAmB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAM,EAEjDC,EAAoB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAU,ECDnE,EAA8B,iC,SCiE9B,EA5DoB,WAClB,IAAMH,GAAWI,EAAAA,EAAAA,IAAYN,GACvBO,GAAWC,EAAAA,EAAAA,MAEjBC,GAAoCC,EAAAA,EAAAA,UAAS,CAC3CC,KAAM,GACNC,MAAO,KACPC,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAHKM,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAK1BI,EAAe,SAAAC,GACnB,IAAAC,EAAwBD,EAAEE,OAAlBT,EAAIQ,EAAJR,KAAMU,EAAKF,EAALE,MACdL,GAAaM,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACVP,GAAU,IAAAQ,EAAAA,EAAAA,GAAA,GACZZ,EAAOU,IAEZ,EAeA,OACEG,EAAAA,EAAAA,MAAA,QACEC,UAAWC,EACXC,aAAa,MACbC,SAjBiB,SAAAV,GACnBA,EAAEW,iBACF,IAAQlB,EAAgBI,EAAhBJ,KAAMC,EAAUG,EAAVH,MAEVV,EAAS4B,MAAK,SAAAC,GAAO,OAAIA,EAAQpB,OAASA,CAAI,IAChDqB,MAAM,GAADC,OAAItB,EAAI,6BAIfJ,GAAS2B,EAAAA,EAAAA,IAAgB,CAAEvB,KAAAA,EAAMwB,OAAQvB,EAAMwB,cAC/CpB,EAAc,CAAEL,KAAM,GAAIC,MAAO,KACnC,EAM2ByB,SAAA,EAEvBb,EAAAA,EAAAA,MAAA,SAAAa,SAAA,CAAO,QAELC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACL5B,KAAK,OACLU,MAAON,EAAWJ,KAClB6B,SAAUvB,QAIdO,EAAAA,EAAAA,MAAA,SAAAa,SAAA,CAAO,UAELC,EAAAA,EAAAA,KAAA,SACEC,KAAK,MACL5B,KAAK,QACLU,MAAON,EAAWH,MAClB4B,SAAUvB,QAGdqB,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQF,SAAC,kBAG5B,EC/DA,GAAgB,YAAc,iCAAiC,YAAc,iCAAiC,cAAgB,mCAAmC,UAAY,gCCIhKI,EAAc,SAAHC,GAA8B,IAAxBC,EAAED,EAAFC,GAAIhC,EAAI+B,EAAJ/B,KAAMwB,EAAMO,EAANP,OAChC5B,GAAWC,EAAAA,EAAAA,MAMjB,OACEgB,EAAAA,EAAAA,MAAA,MAAIC,UAAWC,EAAAA,YAAgBW,SAAA,EAC7Bb,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,YAAgBW,SAAA,EAC9Bb,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAAA,YAAgBW,SAAA,CAAE1B,EAAK,OAAS,KACjD2B,EAAAA,EAAAA,KAAA,QAAMb,UAAWC,EAAAA,cAAkBW,SAAEF,QAEvCG,EAAAA,EAAAA,KAAA,UAAQb,UAAWC,EAAAA,UAAea,KAAK,SAASK,QAV/B,SAAAC,GACnBtC,GAASuC,EAAAA,EAAAA,IAAmBH,GAC9B,EAQ0EN,SAAC,aAK7E,ECvBaU,EAAiB,SAAA9C,GAAK,OAAIA,EAAM+C,MAAO,ECCpD,EAA8B,iCAA9B,EAA4E,gCC6B5E,MAvBA,WACE,IAAM9C,GAAWI,EAAAA,EAAAA,IAAYN,GACvBgD,GAAS1C,EAAAA,EAAAA,IAAYyC,GAErBE,EAAkB/C,EAAS8C,QAAO,SAAAN,GAAO,OAAAA,EAAJ/B,KACpCuC,cAAcC,SAASH,EAAOE,cAAc,IAGnD,OACEZ,EAAAA,EAAAA,KAAA,OAAKb,UAAWC,EAAgBW,SACT,IAApBnC,EAASkD,QACRd,EAAAA,EAAAA,KAAA,KAAGb,UAAWC,EAAeW,SAAC,2BAE9BY,EAAgBI,KAAI,SAAAC,GAA0B,IAAvBX,EAAEW,EAAFX,GAAIhC,EAAI2C,EAAJ3C,KAAMC,EAAK0C,EAAL1C,MAC/B,OACE0B,EAAAA,EAAAA,KAACG,EAAW,CAAkBE,GAAIA,EAAIhC,KAAMA,EAAMwB,OAAQvB,GAAxC2C,OAAOZ,GAE7B,KAIR,E,iBC3BA,EAAyB,uBCwBzB,MApBA,WACE,IAAMpC,GAAWC,EAAAA,EAAAA,MAMjB,OACEgB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAWW,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOkB,QAAQ,eAAcnB,SAAC,2BAC9BC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLI,GAAG,eACHH,SAVqB,SAAAK,GACzBtC,GAASkD,EAAAA,EAAAA,IAAgBZ,EAAMzB,OAAOC,OACxC,EASMqC,YAAY,yBAIpB,ECtBA,EAAoC,oCAApC,EAA6F,qCAA7F,EAAuJ,qCAAvJ,EAA2M,+BAA3M,EAAyP,+BC4CzP,EAnCiB,WACf,IAAMnD,GAAWC,EAAAA,EAAAA,MACXmD,GAAOrD,EAAAA,EAAAA,KAAY,SAAAL,GAAK,OAAIA,EAAM0D,KAAKC,KAAK,IAC5CvD,GAAYC,EAAAA,EAAAA,IAAYF,GAQ9B,OANAyD,EAAAA,EAAAA,YAAU,WACJF,GACFpD,GAASuD,EAAAA,EAAAA,MAEb,GAAG,CAACH,EAAMpD,KAGR+B,EAAAA,EAAAA,KAAA,OAAKb,UAAWC,EAAsBW,SACnChC,GACCiC,EAAAA,EAAAA,KAACyB,EAAAA,EAAM,KAEPvC,EAAAA,EAAAA,MAAAwC,EAAAA,SAAA,CAAA3B,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eACJb,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAuBW,SAAA,EACrCb,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBW,SAAA,EAC/BC,EAAAA,EAAAA,KAAC2B,EAAW,KACZ3B,EAAAA,EAAAA,KAAC4B,EAAM,QAET1C,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBW,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAC6B,EAAW,KACZ7B,EAAAA,EAAAA,KAAA,KAAGb,UAAWC,EAAuBW,SAAC,qCAOpD,C","sources":["redux/contacts/selectors.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactItem/ContactItem.module.css?7ce2","components/ContactList/ContactItem/ContactItem.jsx","redux/filter/selectors.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const contactsSelector = state => state.contacts.items;\n\nexport const isLoadingSelector = state => state.contacts.isLoading;\n\nexport const contactsErrorSelector = state => state.contacts.error;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\"};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContactThunk } from '../../redux/contacts/operations';\nimport { contactsSelector } from '../../redux/contacts/selectors';\nimport css from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const contacts = useSelector(contactsSelector);\n  const dispatch = useDispatch();\n\n  const [formValues, setFormValues] = useState({\n    name: '',\n    phone: '',\n  });\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setFormValues({\n      ...formValues,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { name, phone } = formValues;\n\n    if (contacts.some(contact => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContactThunk({ name, number: phone.toString() }));\n    setFormValues({ name: '', phone: '' });\n  };\n\n  return (\n    <form\n      className={css.contactForm}\n      autoComplete=\"off\"\n      onSubmit={handleSubmit}\n    >\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={formValues.name}\n          onChange={handleChange}\n        />\n      </label>\n\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          value={formValues.phone}\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactItem\":\"ContactItem_contactItem__aUSMv\",\"contactName\":\"ContactItem_contactName__zpIwE\",\"contactNumber\":\"ContactItem_contactNumber__5zn6-\",\"deleteBtn\":\"ContactItem_deleteBtn__I0oEU\"};","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContactThunk } from '../../../redux/contacts/operations';\nimport css from './ContactItem.module.css';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = event => {\n    dispatch(deleteContactThunk(id));\n  };\n\n  return (\n    <li className={css.contactItem}>\n      <div className={css.contactInfo}>\n        <span className={css.contactName}>{name}:</span>{' '}\n        <span className={css.contactNumber}>{number}</span>\n      </div>\n      <button className={css.deleteBtn} type=\"button\" onClick={handleDelete}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string,\n};\n","export const filterSelector = state => state.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"noContacts\":\"ContactList_noContacts__-QuDG\"};","import React from 'react';\nimport { ContactItem } from './ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport { contactsSelector } from '../../redux/contacts/selectors';\nimport { filterSelector } from '../../redux/filter/selectors';\nimport css from './ContactList.module.css';\n\nfunction ContactList() {\n  const contacts = useSelector(contactsSelector);\n  const filter = useSelector(filterSelector);\n\n  const currentContacts = contacts.filter(({ name }) =>\n    name.toUpperCase().includes(filter.toUpperCase())\n  );\n\n  return (\n    <div className={css.contactList}>\n      {contacts.length === 0 ? (\n        <p className={css.noContacts}>No contacts available.</p>\n      ) : (\n        currentContacts.map(({ id, name, phone }) => {\n          return (\n            <ContactItem key={Number(id)} id={id} name={name} number={phone} />\n          );\n        })\n      )}\n    </div>\n  );\n}\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setStatusFilter } from '../../redux/filter/filterSlice';\nimport css from './Filter.module.css';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = event => {\n    dispatch(setStatusFilter(event.target.value));\n  };\n\n  return (\n    <div className={css.filter}>\n      <label htmlFor=\"findContacts\">Find contacts by name</label>\n      <input\n        type=\"text\"\n        id=\"findContacts\"\n        onChange={handleFilterChange}\n        placeholder=\"Enter contact name\"\n      />\n    </div>\n  );\n}\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsContainer\":\"Contacts_contactsContainer__7xvg8\",\"contactsNoContacts\":\"Contacts_contactsNoContacts__dsc8G\",\"contactsComponents\":\"Contacts_contactsComponents__99fls\",\"contactsForm\":\"Contacts_contactsForm__UlpEi\",\"contactsList\":\"Contacts_contactsList__OMbvS\"};","import ContactForm from '../../components/ContactForm/ContactForm';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContactsThunk } from 'redux/contacts/operations';\nimport ContactList from '../../components/ContactList/ContactList';\nimport { isLoadingSelector } from 'redux/contacts/selectors';\nimport Loader from '../../components/Loader/Loader';\nimport Filter from '../../components/Filter/Filter';\nimport css from './Contacts.module.css';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const auth = useSelector(state => state.auth.token);\n  const isLoading = useSelector(isLoadingSelector);\n\n  useEffect(() => {\n    if (auth) {\n      dispatch(fetchContactsThunk());\n    }\n  }, [auth, dispatch]);\n\n  return (\n    <div className={css.contactsContainer}>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <h1>Phonebook</h1>\n          <div className={css.contactsComponents}>\n            <div className={css.contactsForm}>\n              <ContactForm />\n              <Filter />\n            </div>\n            <div className={css.contactsList}>\n              <h2>Contacts</h2>\n              <ContactList />\n              <p className={css.contactsNoContacts}>No contacts available.</p>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["contactsSelector","state","contacts","items","isLoadingSelector","isLoading","useSelector","dispatch","useDispatch","_useState","useState","name","phone","_useState2","_slicedToArray","formValues","setFormValues","handleChange","e","_e$target","target","value","_objectSpread","_defineProperty","_jsxs","className","css","autoComplete","onSubmit","preventDefault","some","contact","alert","concat","addContactThunk","number","toString","children","_jsx","type","onChange","ContactItem","_ref","id","onClick","event","deleteContactThunk","filterSelector","filter","currentContacts","toUpperCase","includes","length","map","_ref2","Number","htmlFor","setStatusFilter","placeholder","auth","token","useEffect","fetchContactsThunk","Loader","_Fragment","ContactForm","Filter","ContactList"],"sourceRoot":""}